% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_timeline_label.R
\name{geom_timeline_label}
\alias{geom_timeline_label}
\title{Label the Biggest Earthquakes on the Richter Scales}
\usage{
geom_timeline_label(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  show.legend = NA,
  na.rm = FALSE,
  inherit.aes = TRUE,
  ...
)
}
\arguments{
\item{mapping}{Set of aesthetis mappings created by \code{\link[ggplot2]{aes}}.}

\item{data}{The data to be displayed in this layer.}

\item{stat}{Override the default connection between \code{geom_timeline_label}
and stat_timeline_label(however I have not written a stat for this geom).}

\item{position}{Position adjustment, either as a string, or the result of a
call to position adjustment function.}

\item{show.legend}{logical. Should this layer be included in the legends? NA,
the default, includes if any aesthetics are mapped. FALSE never includes,
and TRUE always includes. It can also be a named logical vector to finely
select the aesthetics to display.}

\item{na.rm}{If FALSE, the default, missing values are removed with a warning.
If TRUE, missing values are silently removed.}

\item{inherit.aes}{If FALSE, overrides the default aesthetics, rather than
combining with them.}

\item{...}{Other arguments passed on to \code{link[ggplot2]{layer}}.}
}
\description{
\code{geom_timeline_label} enables you to label the n biggest earthquakes
based on the Richter scales by means of \code{n_max} arguments.
}
\examples{
\dontrun{
NOAA_data <- NOAA_data \%>\%
eq_clean_data() \%>\%
eq_location_clean() \%>\%
dplyr::filter(Country \%in\% c("MEXICO", "IRAN") &
               Date \%within\% lubridate::interval(ymd(20000103), ymd(20180104))) \%>\%
dplyr::mutate(Country = factor(Country, levels = unique(Country))) \%>\%
ggplot2::ggplot() +
geom_timeline(ggplot2::aes(x = Date, y = Country, size = Mag, colour = Deaths)) +
geom_timeline_label(ggplot2::aes(x = Date, y = Country, label = Location,
                         magnitude = Mag, colour = Deaths, n_max = 7), alpha = 0.5) +
ggplot2::scale_colour_continuous(name = "# deaths") +
ggplot2::theme(legend.position = "bottom") +
ggplot2::ylab("")
}

}
